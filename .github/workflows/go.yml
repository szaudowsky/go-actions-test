name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Checkout code into the Go module directory
      uses: actions/checkout@v2

    - name: Install golangci-lint
      run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.18.0

    - name: Run golangci-lint
      run: $(go env GOPATH)/bin/golangci-lint run
  
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build bin
        run: make build
  
  Test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get gopherbadger
        run: go get -u -v github.com/jpoles1/gopherbadger
      - name: Run tests
        run: |
          make race
          echo "::set-env name=COVERAGE::$(go env GOPATH tool cover -func=coverage.out | tail -n 1 | awk '{print $3}' | sed 's/%//')"
          echo $COVERAGE
          $(go env GOPATH)/bin/gopherbadger -manualcov=$COVERAGE
        

     

  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Set up Go 1.13
  #     uses: actions/setup-go@v1
  #     with:
  #       go-version: 1.13
  #     id: go

  #   - name: Check out code into the Go module directory
  #     uses: actions/checkout@v2

  #   - name: Get dependencies
  #     run: |
  #       go get -v -t -d ./...
  #       if [ -f Gopkg.toml ]; then
  #           curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  #           dep ensure
  #       fi

  #   - name: Build
  #     run: go build -v .
